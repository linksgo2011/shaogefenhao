(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{898:function(_,v,l){"use strict";l.r(v);var i=l(15),e=Object(i.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("p",[_._v("__")]),_._v(" "),l("h2",{attrs:{id:"_1-版本规则"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-版本规则"}},[_._v("#")]),_._v(" 1. 版本规则")]),_._v(" "),l("p",[_._v("版本规则使用语义化版本规则，英文是 semver version，语义化版本规范参考：https://semver.org/lang/zh-CN/")]),_._v(" "),l("p",[_._v("语义化版本控制规范（SemVer）的简单表述为：")]),_._v(" "),l("p",[_._v("标准的版本号采用 X.Y.Z 的格式，其中 X、Y 和 Z 为非负的整数，且禁止在数字前方补零。X 是主版本号、Y 是次版本号、而 Z 为修订号。\nX.Y.Z 的格式简单说明：")]),_._v(" "),l("ul",[l("li",[_._v("主版本号 X 在不向下兼容的更新时候递增，标志着软件的重大更新。")]),_._v(" "),l("li",[_._v("次版本号 Y 在向下兼容的情况下添加新的特性，弃用的 API 可以备注但是需要继续保持支持。")]),_._v(" "),l("li",[_._v("修订版本号 Z 为修复缺陷后的版本号，不涉及破坏性的更新和特性变化。")])]),_._v(" "),l("p",[_._v("语义化的版本号可以让发布管理变得更加简单和规范。")]),_._v(" "),l("h2",{attrs:{id:"_2-封包"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-封包"}},[_._v("#")]),_._v(" 2. 封包")]),_._v(" "),l("p",[_._v("封包又叫代码冻结，指的是一个软件版本开发完成，并修复完大部分已知的缺陷。代码冻结后，不应该再加入新的特性，但是依然可以进行 bug 修复。")]),_._v(" "),l("p",[_._v("封包操作流程：")]),_._v(" "),l("ol",[l("li",[_._v("通过 Master 分支拉取 release 分支，分支的命名按照 release_[版本号] 的规则进行，例如：release_1.0。")]),_._v(" "),l("li",[_._v("通过最新的 commit it 创建一个 tag，名称为当前的版本号。")]),_._v(" "),l("li",[_._v("触发流水线构建发布的制品。")]),_._v(" "),l("li",[_._v("准备上线清单，并将上线清单在 UAT 演练一遍")]),_._v(" "),l("li",[_._v("清理不再使用的分支")])]),_._v(" "),l("p",[_._v("完成封包后，在 UAT 进行回归和进行 bug bash（一种全体探索性测试实践），完成测试后，按照计划进行上线。")]),_._v(" "),l("h2",{attrs:{id:"_3-上线"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3-上线"}},[_._v("#")]),_._v(" 3. 上线")]),_._v(" "),l("p",[_._v("上线使用 Jenkins 或者其他 CD 平台，避免手工操作，发布时间需要在迭代计划中指定的时间。\n上线工作参与人员：")]),_._v(" "),l("ul",[l("li",[_._v("Deveops 人员")]),_._v(" "),l("li",[_._v("每一个部署单元开发接口人\n上线时间推荐在晚上 10 - 12 点之间，上线期间通过视频会议进行直播，让必要的团队成员都能参与。")])]),_._v(" "),l("h3",{attrs:{id:"上线检查清单"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#上线检查清单"}},[_._v("#")]),_._v(" 上线检查清单")]),_._v(" "),l("ol",[l("li",[_._v("上线前\n"),l("ul",[l("li",[_._v("确认软件制品已经准备完成，并完成回归测试")]),_._v(" "),l("li",[_._v("提前发送业务中断信息，包括邮件和悬挂系统通知")]),_._v(" "),l("li",[_._v("准备部署脚本 （例如 shell、ansible）和线上配置文件（例如Nginx配置）")]),_._v(" "),l("li",[_._v("制定上线计划，上线计划应该清晰地表明执行步骤和负责人")]),_._v(" "),l("li",[_._v("在低版本演练上线计划（UAT环境）")]),_._v(" "),l("li",[_._v("在低版本演练灾备恢复")]),_._v(" "),l("li",[_._v("需要准备好回退计划")]),_._v(" "),l("li",[_._v("有条件的，进行安全测试")])])]),_._v(" "),l("li",[_._v("上线\n"),l("ul",[l("li",[_._v("执行上线动作至少需要两人pair操作（大量误操作造成事故的案例），可以创建线上会议直播上线操作")]),_._v(" "),l("li",[_._v("停服后需要监控数据流量，确保流量为 0 后再进行数据、配置和线上软件包的备份")]),_._v(" "),l("li",[_._v("上线失败后使用回退计划")]),_._v(" "),l("li",[_._v("尽量不对线上环境进行手动配置，如果无法实现自动化部署，应添加到上线计划中")])])]),_._v(" "),l("li",[_._v("上线完成后\n"),l("ul",[l("li",[_._v("使用专用的 Health check 接口检查系统健康状态")]),_._v(" "),l("li",[_._v("核对线上系统的版本号是否和预期一致")]),_._v(" "),l("li",[_._v("检查服务器负载是否在健康范围内")]),_._v(" "),l("li",[_._v("其他授权下的线上测试")]),_._v(" "),l("li",[_._v("检查日志平台是否有日志到达")]),_._v(" "),l("li",[_._v("检查日志中是否有错误信息")]),_._v(" "),l("li",[_._v("发送业务恢复邮件和系统通知")]),_._v(" "),l("li",[_._v("上线完成后，需要当前线上环境的信息更新文档")]),_._v(" "),l("li",[_._v("记录新的IP地址、服务器配置信息等")]),_._v(" "),l("li",[_._v("归档最新线上的版本号、软件包、配置文件")]),_._v(" "),l("li",[_._v("归档本次上线计划")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);