(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{940:function(t,e,s){"use strict";s.r(e);var v=s(15),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"解决的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决的问题"}},[t._v("#")]),t._v(" 解决的问题")]),t._v(" "),s("p",[t._v("在很多系统中都有一些实时交互需求，例如 A 用户拖动一个图标，B 用户需要能实时感知。这对前后端开发都有较大的挑战，带来非常大的技术挑战。")]),t._v(" "),s("p",[t._v("另外也有一些基本的实时协作的需求，例如收到服务器的通知，然后展示出小红点。")]),t._v(" "),s("h2",{attrs:{id:"主要技术选型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要技术选型"}},[t._v("#")]),t._v(" 主要技术选型")]),t._v(" "),s("ul",[s("li",[t._v("store 模式前端简化交互")]),t._v(" "),s("li",[t._v("服务器 store 模式获得最终数据交互")]),t._v(" "),s("li",[t._v("通过 websocket 订阅 event 传送")]),t._v(" "),s("li",[t._v("通过 kafka 实现多播")]),t._v(" "),s("li",[t._v("通过 nodejs 作为后端同构语言，用于响应式编程")]),t._v(" "),s("li",[t._v("使用 MongoDB 作为文档数据库（取决于业务类型）")]),t._v(" "),s("li",[t._v("前后端使用同一事件处理代码")])])])}),[],!1,null,null,null);e.default=a.exports}}]);