(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{989:function(a,e,t){"use strict";t.r(e);var v=t(15),l=Object(v.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"maven-基本命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-基本命令"}},[a._v("#")]),a._v(" maven 基本命令")]),a._v(" "),t("p",[a._v("不安装任何插件的命令")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("mvn compile:编译，生成 target target里边编译后的class文件")])]),a._v(" "),t("li",[t("p",[a._v("mvn clean 清理清 target里边所有文件")])]),a._v(" "),t("li",[t("p",[a._v("mvn test-compile 编译test下的类，它首先会编译被测试的类")])]),a._v(" "),t("li",[t("p",[a._v("mvn  package 打包，输出 jar 或者 war")])]),a._v(" "),t("li",[t("p",[a._v("mvn source:jar  生成源码jar包 ，只打main里边的")])]),a._v(" "),t("li",[t("p",[a._v("mvn install 安装命令，把打包成jar包 放到仓库里边，可以被使用")])]),a._v(" "),t("li",[t("p",[a._v("mvn deploy 将最终的包复制到远程仓库")])])]),a._v(" "),t("h2",{attrs:{id:"常用插件和作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用插件和作用"}},[a._v("#")]),a._v(" 常用插件和作用")]),a._v(" "),t("h3",{attrs:{id:"maven-release-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#maven-release-plugin"}},[a._v("#")]),a._v(" maven-release-plugin")]),a._v(" "),t("p",[a._v("maven release 插件，功能主要有两个:")]),a._v(" "),t("ul",[t("li",[a._v("修改  pom 文件版本号，提交 git tag")]),a._v(" "),t("li",[a._v("执行 mvn deploy 将新版本推送到服务器")])])])}),[],!1,null,null,null);e.default=l.exports}}]);