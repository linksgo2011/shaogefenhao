(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{1054:function(e,a,s){"use strict";s.r(a);var n=s(15),t=Object(n.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("在计算密集型的项目中，需要用到多线程来做并发操作，java 多线程最好的方案就是使用线程池。\n可以通过使用 Spring 中封装好的线程池类，也可以使用 Java 原生接口。")]),e._v(" "),s("h2",{attrs:{id:"使用-spring-中threadpooltaskexecutor实现线程池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-spring-中threadpooltaskexecutor实现线程池"}},[e._v("#")]),e._v(" 使用 Spring 中ThreadPoolTaskExecutor实现线程池")]),e._v(" "),s("p",[e._v("如果项目中已经存在 Spring 则可以使用一个由Spring 封装好了的线程池单例")]),e._v(" "),s("p",[e._v("声明下面 Bean")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@Configuration\npublic class ThreadPoolConfig {\n    @Bean("threadPoolTaskExecutor")\n    public ThreadPoolTaskExecutor threadPoolTaskExecutor(){\n        ThreadPoolTaskExecutor threadPoolTaskExecutor=new ThreadPoolTaskExecutor();\n        threadPoolTaskExecutor.setCorePoolSize(4);\n        threadPoolTaskExecutor.setKeepAliveSeconds(10);\n        threadPoolTaskExecutor.setMaxPoolSize(10);\n        threadPoolTaskExecutor.setQueueCapacity(10);\n        return threadPoolTaskExecutor;\n\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br")])]),s("p",[e._v("创建一个测试的线程类，继承 Thread 或者实现 Runnable 都可")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('public class MyThread extends Thread {\n\n    @Override\n\n    publicvoid run() {\n\n        System.out.println(Thread.currentThread().getName() + "正在执行。。。");\n\n    }\n\n}\n\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br")])]),s("p",[e._v("在需要使用的地方只需要注入 Bean，然后执行任务即可")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Autowired\nThreadPoolTaskExecutor threadPoolTaskExecutor;\nthreadPoolTaskExecutor.execute(new MyThread());\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br")])]),s("h2",{attrs:{id:"使用-java-原生接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-java-原生接口"}},[e._v("#")]),e._v(" 使用 Java 原生接口")]),e._v(" "),s("p",[e._v("在 Java 中，原生的线程池接口为 ExecutorService。Executors 默认提供了数个实现，其中创建固定的线程个数的线程池比较常用 newFixedThreadPool。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ExecutorService executor = Executors.newFixedThreadPool(10);\nexecutor.execute(new MyThread());\nexecutor.shutdown;\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("需要特别注意的是，线程池中的线程不会被自动释放，需要自己手动调用 shutdown 释放。")])])}),[],!1,null,null,null);a.default=t.exports}}]);