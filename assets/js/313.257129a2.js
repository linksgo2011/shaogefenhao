(window.webpackJsonp=window.webpackJsonp||[]).push([[313],{1134:function(s,n,a){"use strict";a.r(n);var t=a(15),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("我们经常会谈论性能、并发等问题，但是衡量性能不是说写段代码循环几百次这么简单。最近从项目上的同事了解到了代码化的测试性能测试工具 k6，以及结合之前用过的Java 微基准测试 (JMH)、AB (Apache Benchmark) 测试、Jmeter 做一下总结。")]),s._v(" "),a("p",[s._v("谈性能，实际上结合实际的业务背景、网络条件、测试数据的选择等因素影响非常大，单纯的谈 QPS 等数据意义不大。")]),s._v(" "),a("p",[s._v("这里介绍的几个工具刚好能满足平时开发工作中不同场景下衡量性能的需求，因此整理出来。")]),s._v(" "),a("ul",[a("li",[s._v("Java 微基准测试 (JMH) 可以用于衡量一段 Java 代码到底性能如何，例如我们平时总是谈 StringBuilder 比 new String() 快很多。我们有一个很好地量化方法，就可以很直观的展示出一段代码的性能优劣。")]),s._v(" "),a("li",[s._v("AB (Apache Benchmark) 测试是 Apache 服务器内置的一个 http web 压测工具，非常简单易用。Mac 预装了 Apache，因此可以随手使用来测试一个页面或者 API 的性能。贵在简单易用，无需额外安装。")]),s._v(" "),a("li",[s._v("k6 一款使用 go 语言编写，支持用户编写测试脚本的测试套件。弥补了 ab 测试功能不足，以及 jemeter 不容易代码化的缺点。也是项目上需要使用，从同事那里了解到的。")]),s._v(" "),a("li",[s._v("Jmeter 老牌的性能测试工具，有大量专门讲 jmeter 的资料，本文不再赘述。")])]),s._v(" "),a("p",[s._v("那我们从 JMH 开始从来看下这几个工具的特点和使用吧。")]),s._v(" "),a("h2",{attrs:{id:"java-微基准测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-微基准测试"}},[s._v("#")]),s._v(" Java 微基准测试")]),s._v(" "),a("blockquote",[a("p",[s._v("StringBuilder 到底比 new String() 快多少呢？")])]),s._v(" "),a("p",[s._v("我们可以使用 JMH 来测试一下。JMH 是一个用于构建、运行和分析 Java 方法运行性能工具，可以做到 nano/micro/mili/macro 时间粒度。JMH 不仅可以分析 Java 语言，基于 JVM 的语言都可以使用。")]),s._v(" "),a("p",[s._v("JMH 由 OpenJDK 团队开发，由一次下载 OpenJDK 时注意到官网还有这么一个东西。")]),s._v(" "),a("p",[s._v("OpenJdk 官方运行 JMH 测试推的方法是使用 Maven 构建一个单独的项目，然后把需要测试的项目作为 Jar 包引入。这样能排除项目代码的干扰，得到比较可靠地测试效果。当然也可以使用 IDE 或者 Gradle 配置到自己项目中，便于和已有项目集成，代价是配置比较麻烦并且结果没那么可靠。")]),s._v(" "),a("h3",{attrs:{id:"使用-maven-构建基准测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-maven-构建基准测试"}},[s._v("#")]),s._v(" 使用 Maven 构建基准测试")]),s._v(" "),a("p",[s._v("根据官网的例子，我们可以使用官网的一个模板项目。")]),s._v(" "),a("blockquote",[a("p",[s._v("mvn archetype:generate "),a("br"),s._v("\n-DinteractiveMode=false "),a("br"),s._v("\n-DarchetypeGroupId=org.openjdk.jmh "),a("br"),s._v("\n-DarchetypeArtifactId=jmh-java-benchmark-archetype "),a("br"),s._v("\n-DgroupId=org.sample "),a("br"),s._v("\n-DartifactId=test "),a("br"),s._v("\n-Dversion=1.0")])]),s._v(" "),a("p",[s._v("创建一个项目，导入 IDE，Maven 会帮我们生成一个测试类，但是这个测试类没有任何内容，这个测试也是可以运行的。")]),s._v(" "),a("p",[s._v("先编译成 jar")]),s._v(" "),a("blockquote",[a("p",[s._v("mvn clean install")])]),s._v(" "),a("p",[s._v("然后使用 javar -jar 来运行测试")]),s._v(" "),a("blockquote",[a("p",[s._v("java -jar target/benchmarks.jar")])]),s._v(" "),a("p",[s._v("运行后可以看到输出信息中包含 JDK、JVM 等信息，以及一些用于测试的配置信息。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# JMH version: 1.22\n# VM version: JDK 1.8.0_181, Java HotSpot(TM) 64-Bit Server VM, 25.181-b13\n# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/bin/java\n# VM options: <none>\n# Warmup: 5 iterations, 10 s each\n# Measurement: 5 iterations, 10 s each\n# Timeout: 10 min per iteration\n# Threads: 1 thread, will synchronize iterations\n# Benchmark mode: Throughput, ops/time\n# Benchmark: org.sample.MyBenchmark.testSimpleString\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("下面是一些配置信息说明")]),s._v(" "),a("ul",[a("li",[s._v("Warmup 因为 JVM 即时编译的存在，所以为了更加准确有一个预热环节，这里是预热  5，每轮 10s。")]),s._v(" "),a("li",[s._v("Measurement 是真实的性能测量参数，这里是 5轮，每轮10s。")]),s._v(" "),a("li",[s._v("Timeout 每轮测试，JMH 会进行 GC 然后暂停一段时间，默认是 10 分钟。")]),s._v(" "),a("li",[s._v("Threads 使用多少个线程来运行，一个线程会同步阻塞执行。")]),s._v(" "),a("li",[s._v("Benchmark mode 输出的运行模式，常用的有下面几个。\n"),a("ul",[a("li",[s._v("Throughput 吞吐量，即每单位运行多少次操作。")]),s._v(" "),a("li",[s._v("AverageTime 调用的平均时间，每次调用耗费多少时间。")]),s._v(" "),a("li",[s._v("SingleShotTime 运行一次的时间，如果把预热关闭可以测试代码冷启动时间")])])]),s._v(" "),a("li",[s._v("Benchmark 测试的目标类")])]),s._v(" "),a("p",[s._v("实际上还有很多配置，可以通过 -h 参数查看")]),s._v(" "),a("blockquote",[a("p",[s._v("java -jar target/benchmarks.jar -h")])]),s._v(" "),a("p",[s._v("由于默认的配置停顿的时间太长，我们通过注解修改配置，并增加了 Java 中最基本的字符串操作性能对比。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations = 3)\n@Measurement(iterations = 5, time = 5, timeUnit = TimeUnit.SECONDS)\n@Threads(8)\n@Fork(1)\n@OutputTimeUnit(TimeUnit.MILLISECONDS)\npublic class MyBenchmark {\n\n    @Benchmark\n    public void testSimpleString() {\n        String s = "Hello world!";\n        for (int i = 0; i < 10; i++) {\n            s += s;\n        }\n    }\n\n    @Benchmark\n    public void testStringBuilder() {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < 10; i++) {\n            sb.append(i);\n        }\n    }\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[s._v("在控制台可以看到输出的测试报告，我们直接看最后一部分即可。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Benchmark                       Mode  Cnt      Score      Error   Units\nMyBenchmark.testSimpleString   thrpt   10    226.930 ±   16.621  ops/ms\nMyBenchmark.testStringBuilder  thrpt   10  80369.037 ± 3058.280  ops/ms\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("Score 这列的意思是每毫秒完成了多少次操作，可见 StringBuilder 确实比普通的 String 构造器性能高很多。")]),s._v(" "),a("h3",{attrs:{id:"更多有趣的测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多有趣的测试"}},[s._v("#")]),s._v(" 更多有趣的测试")]),s._v(" "),a("p",[s._v("实际上平时 Java 开发中一些细节对性能有明显的影响，虽然对系统整体来说影响比较小，但是注意这些细节可以低成本的避免性能问题堆积。")]),s._v(" "),a("p",[s._v("其中一个非常有意思细节是自动包装类型的使用，即使是一个简单的 for 循环，如果不小心讲 int 使用成 Integer 也会造成性能浪费。")]),s._v(" "),a("p",[s._v("我们来编写一个简单的基准测试")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    @Benchmark\n    public void primaryDataType() {\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += i;\n        }\n    }\n\n    @Benchmark\n    public void boxDataType() {\n        int sum = 0;\n        for (Integer i = 0; i < 10; i++) {\n            sum += i;\n        }\n    }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("运行测试后，得到下面的测试结果")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("AutoBoxBenchmark.boxDataType       thrpt    5   312779.633 ±   26761.457  ops/ms\nAutoBoxBenchmark.primaryDataType   thrpt    5  8522641.543 ± 2500518.440  ops/ms\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("基本类型的性能高出了一个数量级。当然你可能会说基本类型这种性能问题比较微小，但是性能往往就是这种从细微处提高的。另外编写 JMH 测试也会让团队看待性能问题更为直观。")]),s._v(" "),a("h3",{attrs:{id:"一份直观的-java-基础性能报告"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一份直观的-java-基础性能报告"}},[s._v("#")]),s._v(" 一份直观的 Java 基础性能报告")]),s._v(" "),a("p",[s._v("下面是我写的常见场景的性能测试，例如 StringBuilder 比 new String() 速度快几个数量级。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Test")]),s._v(" "),a("th",[s._v("Mode")]),s._v(" "),a("th",[s._v("OPS")]),s._v(" "),a("th",[s._v("Unit")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v('"cn.printf.jmhreports.AutoBoxBenchmark.boxDataType"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("323693300.862712")]),s._v(" "),a("td",[s._v("ops/s")])]),s._v(" "),a("tr",[a("td",[s._v('"cn.printf.jmhreports.AutoBoxBenchmark.primaryDataType"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("9421830157.195677")]),s._v(" "),a("td",[s._v("ops/s")])]),s._v(" "),a("tr",[a("td",[s._v('"cn.printf.jmhreports.CacheValueBenchmark.test"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("204814.611974")]),s._v(" "),a("td",[s._v("ops/s")])]),s._v(" "),a("tr",[a("td",[s._v('"cn.printf.jmhreports.CacheValueBenchmark.testStringBuilder"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("80039810.903665")]),s._v(" "),a("td",[s._v("ops/s")])]),s._v(" "),a("tr",[a("td",[s._v('"cn.printf.jmhreports.StringBenchmark.constructStringByAssignment"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("197815.644537")]),s._v(" "),a("td",[s._v("ops/s")])]),s._v(" "),a("tr",[a("td",[s._v('"cn.printf.jmhreports.StringBenchmark.constructStringByConstructor"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("205494.677150")]),s._v(" "),a("td",[s._v("ops/s")])]),s._v(" "),a("tr",[a("td",[s._v('"cn.printf.jmhreports.StringBenchmark.constructStringByStringBuilder"')]),s._v(" "),a("td",[s._v('"thrpt"')]),s._v(" "),a("td",[s._v("66162972.690813")]),s._v(" "),a("td",[s._v("ops/s")])])])]),s._v(" "),a("p",[s._v("代码仓库和持续更新的基准测试可以看下面的仓库。")]),s._v(" "),a("p",[s._v("https://github.com/linksgo2011/jmh-reports")]),s._v(" "),a("h2",{attrs:{id:"apache-benchmark-测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache-benchmark-测试"}},[s._v("#")]),s._v(" Apache Benchmark 测试")]),s._v(" "),a("blockquote",[a("p",[s._v("我想用命令行快速简单的压测一下网站该怎么办呢？")])]),s._v(" "),a("p",[s._v("Apache Benchmark (简称 ab，不同于产品领域的 A/B 测试) 是 Apache web 服务器自带的性能测试工具，在 windows 或者 linux 上安装了 Apache 服务器就可以在其安装位置的 bin 目录中找到 ab 这个程序。")]),s._v(" "),a("p",[s._v("ab 使用起来非常简单，一般只需要 -n 参数指明发出请求的总数，以及 -c 参数指明测试期间的并发数。")]),s._v(" "),a("p",[s._v("例如对 ThoughtWorks 官网首页发出 100 个请求，模拟并发数为 10：")]),s._v(" "),a("blockquote",[a("p",[s._v("ab -n 100 -c 10 https://thoughtworks.com/")])]),s._v(" "),a("p",[s._v("需要注意的是 ab 工具接收一个 url 作为参数，仅仅是一个域名是不合法的，需要增加 "),a("code",[s._v("/")]),s._v(" 表示首页。稍等片刻后就可以看到测试报告:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Server Software:        nginx/1.15.6\nServer Hostname:        thoughtworks.com\nServer Port:            443\nSSL/TLS Protocol:       TLSv1.2,ECDHE-RSA-AES256-GCM-SHA384,2048,256\nServer Temp Key:        ECDH P-256 256 bits\nTLS Server Name:        thoughtworks.com\n\nDocument Path:          /\nDocument Length:        162 bytes\n\nConcurrency Level:      10\nTime taken for tests:   42.079 seconds\nComplete requests:      100\nFailed requests:        0\nNon-2xx responses:      100\nTotal transferred:      42500 bytes\nHTML transferred:       16200 bytes\nRequests per second:    2.38 [#/sec] (mean)\nTime per request:       4207.888 [ms] (mean)\nTime per request:       420.789 [ms] (mean, across all concurrent requests)\nTransfer rate:          0.99 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:     1056 2474 3006.1   1144   23032\nProcessing:   349  740 1003.5    379    8461\nWaiting:      349  461 290.9    377    2265\nTotal:       1411 3214 3273.9   1674   23424\n\nPercentage of the requests served within a certain time (ms)\n  50%   1674\n  66%   2954\n  75%   3951\n  80%   4397\n  90%   6713\n  95%   9400\n  98%  14973\n  99%  23424\n 100%  23424 (longest request)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br")])]),a("p",[s._v("从这个报告中可以看到服务器的一些基本信息，以及请求的统计信息。比较重要的指标是 "),a("code",[s._v("Requests per second")]),s._v(" 每秒钟完成的请求数量，不严格的说也就是我们的平时说的 QPS。")]),s._v(" "),a("p",[s._v("ab 测试是专为 http 请求设计的，因此 ab 的其他参数和 curl 的参数比较类似，也可以指定 http method 以及 cookies 等参数。")]),s._v(" "),a("h2",{attrs:{id:"k6-测试套件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k6-测试套件"}},[s._v("#")]),s._v(" K6 测试套件")]),s._v(" "),a("blockquote",[a("p",[s._v("我需要编写复杂的测试脚本，并保留压测的脚本、参数、数据，以及版本化该怎么做呢？")])]),s._v(" "),a("p",[s._v("k6 是一个压力测试套件，使用 golang 编写。主要特性有：")]),s._v(" "),a("ul",[a("li",[s._v("提供了友好的 CLI  工具")]),s._v(" "),a("li",[s._v("使用 JavaScript 代码编写测试用例")]),s._v(" "),a("li",[s._v("可以根据性能条件设置阈值，表明成功还是失败")])]),s._v(" "),a("p",[s._v("k6 没有使用 nodejs 而是 golang 程序，通过包裹了一个 JavaScript 运行时来运行 JavaScript 脚本，因此不能直接使用 npm 包以及 Nodejs 提供的一些 API。")]),s._v(" "),a("p",[s._v("同时，k6 在运行测试时，没有启动浏览器，主要用于测试页面以及 API 加载速度。k6 提供了通过网络请求（HAR）生成测试脚本的方法，实现更简便的测试脚本编写，以及 session 的维护。")]),s._v(" "),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[s._v("#")]),s._v(" 使用")]),s._v(" "),a("p",[s._v("在 Mac 上比较简单，直接使用 HomeBrew 即可安装：")]),s._v(" "),a("blockquote",[a("p",[s._v("brew install k6")])]),s._v(" "),a("p",[s._v("其他平台官网也提供了相应的安装方式，比较特别的是提供了 Docker 的方式运行。")]),s._v(" "),a("p",[s._v("直接使用 k6 的命令运行测试，官网提供了一个例子：")]),s._v(" "),a("blockquote",[a("p",[s._v("k6 run github.com/loadimpact/k6/samples/http_get.js")])]),s._v(" "),a("p",[s._v("也可以编写自己的测试脚本:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import http from "k6/http";\nimport { sleep } from "k6";\n\nexport default function() {\n  http.get("https://www.thoughtworks.com/");\n  sleep(1);\n};\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("保存文件 script.js 后运行 k6 命令")]),s._v(" "),a("blockquote",[a("p",[s._v("k6 run script.js")])]),s._v(" "),a("p",[s._v("然后可以看到 http 请求的各项指标")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("        /\\      |‾‾|  /‾‾/  /‾/   \n     /\\  /  \\     |  |_/  /  / /    \n    /  \\/    \\    |      |  /  ‾‾\\  \n   /          \\   |  |‾\\  \\ | (_) | \n  / __________ \\  |__|  \\__\\ \\___/ .io\n\n  execution: local\n     output: -\n     script: k6.js\n\n    duration: -,  iterations: 1\n         vus: 1, max: 1\n\n    done [==========================================================] 1 / 1\n\n    data_received..............: 108 kB 27 kB/s\n    data_sent..................: 1.0 kB 252 B/s\n    http_req_blocked...........: avg=2.35s    min=2.35s    med=2.35s    max=2.35s    p(90)=2.35s    p(95)=2.35s   \n    http_req_connecting........: avg=79.18ms  min=79.18ms  med=79.18ms  max=79.18ms  p(90)=79.18ms  p(95)=79.18ms \n    http_req_duration..........: avg=639.03ms min=639.03ms med=639.03ms max=639.03ms p(90)=639.03ms p(95)=639.03ms\n    http_req_receiving.........: avg=358.12ms min=358.12ms med=358.12ms max=358.12ms p(90)=358.12ms p(95)=358.12ms\n    http_req_sending...........: avg=1.79ms   min=1.79ms   med=1.79ms   max=1.79ms   p(90)=1.79ms   p(95)=1.79ms  \n    http_req_tls_handshaking...: avg=701.46ms min=701.46ms med=701.46ms max=701.46ms p(90)=701.46ms p(95)=701.46ms\n    http_req_waiting...........: avg=279.12ms min=279.12ms med=279.12ms max=279.12ms p(90)=279.12ms p(95)=279.12ms\n    http_reqs..................: 1      0.249921/s\n    iteration_duration.........: avg=4s       min=4s       med=4s       max=4s       p(90)=4s       p(95)=4s      \n    iterations.................: 1      0.249921/s\n    vus........................: 1      min=1 max=1\n    vus_max....................: 1      min=1 max=1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("p",[s._v("k6 提供的性能指标相对 ab 工具多很多，也可以通过脚本自己计算性能指标。和 ab 工具中表明每秒钟处理完的请求数是 http_reqs，上面的测试默认只有一个用户的一次请求，如果通过参数增加更多请求，可以看到和 ab 工具得到的结果比较接近。")]),s._v(" "),a("p",[s._v("运行压力测试时，需要增加更多的虚拟用户（VU），vus 参数和持续时间的参数:")]),s._v(" "),a("blockquote",[a("p",[s._v("k6 run --vus 10 --duration 30s script.js")])]),s._v(" "),a("h3",{attrs:{id:"编写测试脚本的一些规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写测试脚本的一些规则"}},[s._v("#")]),s._v(" 编写测试脚本的一些规则")]),s._v(" "),a("p",[a("code",[s._v("default")]),s._v(" 方法是用于给每个 VU 以及每次迭代重复运行的，因此需要把真正的测试代码放到这个方法中，例如访问某个页面。")]),s._v(" "),a("p",[s._v("为了保证测试的准确性，一些初始化的代码不应该放到 "),a("code",[s._v("default")]),s._v(" 方法中。尤其是文件的读取等依赖环境上下文的操作不能放到 "),a("code",[s._v("default")]),s._v(" 方法中执行，这样做也会丢失 k6 分布式运行的能力。")]),s._v(" "),a("p",[s._v("前面提到的命令行参数，例如指定虚拟用户数量 "),a("code",[s._v("--vus 10")]),s._v("，这些参数也可以放到脚本代码中。通过暴露一个 options 对象即可。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('export let options = {\n  vus: 10,\n  duration: "30s"\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("为了更为真实的模拟用户访问的场景，k6 提供了在整个测试期间让用户数量和访问时间呈阶段性变化的能力。只需要在 options 中增加 stages 参数即可：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('export let options = {\n stages: [\n    { duration: "30s", target: 20 },\n    { duration: "1m30s", target: 10  },\n    { duration: "20s", target: 0 },\n  ]\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在测试过程中需要检查网络请求是否成功，返回的状态码是否正确，以及响应时间是否符合某个阈值。在脚本中可以通过调用 check() 方法编写检查语句，以便 k6 能收集到报告。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import http from "k6/http";\nimport { check, sleep } from "k6";\n\nexport let options = {\n  vus: 10,\n  duration: "30s"\n};\n\nexport default function() {\n  let res = http.get("https://www.thoughtworks.com/");\n  check(res, {\n    "status was 200": (r) => r.status == 200,\n    "transaction time OK": (r) => r.timings.duration < 200\n  });\n  sleep(1);\n};\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"报告输出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报告输出"}},[s._v("#")]),s._v(" 报告输出")]),s._v(" "),a("p",[s._v("k6 默认将报告输出到 stdout 控制台，同时也提供了多种格式报告输出，包括：")]),s._v(" "),a("ul",[a("li",[s._v("JSON")]),s._v(" "),a("li",[s._v("CSV")]),s._v(" "),a("li",[s._v("InfluxDB")]),s._v(" "),a("li",[s._v("Apache Kafka")]),s._v(" "),a("li",[s._v("StatsD")]),s._v(" "),a("li",[s._v("Datadog")]),s._v(" "),a("li",[s._v("Load Impact cloud platform")])]),s._v(" "),a("p",[s._v("当然，我们在编写测试的时候不可能只有一个用例，对多个场景可以在脚本中通过 "),a("code",[s._v("group")]),s._v(" 进行分组，分组后输出的报告会按照分组排列。同时，也可以使用对一个组整体性能衡量的指标 "),a("code",[s._v("group_duration")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import { group } from "k6";\n\nexport default function() {\n  group("user flow: returning user", function() {\n    group("visit homepage", function() {\n      // load homepage resources\n    });\n    group("login", function() {\n      // perform login\n    });\n  });\n};\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("InfluxDB 等外部数据收集平台时，还可以打上标签，供过滤和检索使用。k6 提供了一些内置的标签，并允许用户自定义标签。")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("实际上用于性能测试的工具还有很多，也有一些专门的工具针对网络质量（iperf） 、数据库（sysbench）、前端页面（PageSpeed）等专门方面进行性能测试。")]),s._v(" "),a("p",[s._v("写本文的初衷是想说评价性能，以及做性能优化的第一步应该是寻找到合适工具做一次基准测试，这样的优化往往才有意义。我在使用 JMH 后不仅在工作中使用它对一些代码片段进行测试以及优化，同时更重要的是，在codereview 中对某些操作关于性能的讨论不再基于经验，而是事实。")])])}),[],!1,null,null,null);n.default=e.exports}}]);