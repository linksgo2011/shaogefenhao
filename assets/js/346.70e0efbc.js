(window.webpackJsonp=window.webpackJsonp||[]).push([[346],{1172:function(_,v,e){"use strict";e.r(v);var t=e(15),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h2",{attrs:{id:"身份认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#身份认证"}},[_._v("#")]),_._v(" 身份认证")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 不要使用 "),e("code",[_._v("Basic Auth")]),_._v(" 使用标准的认证协议 (如 JWT, OAuth).")]),_._v(" "),e("li",[_._v("[ ] 不要重新实现 "),e("code",[_._v("Authentication")]),_._v(", "),e("code",[_._v("token generating")]),_._v(", "),e("code",[_._v("password storing")]),_._v(", 使用标准库.")]),_._v(" "),e("li",[_._v("[ ] 限制密码错误尝试次数，并且增加账号冻结功能.")]),_._v(" "),e("li",[_._v("[ ] 加密所有的敏感数据.")])]),_._v(" "),e("h3",{attrs:{id:"jwt-json-web-token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jwt-json-web-token"}},[_._v("#")]),_._v(" JWT (JSON Web Token)")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 使用随机复杂的密钥 ("),e("code",[_._v("JWT Secret")]),_._v(") 以增加暴力破解的难度.")]),_._v(" "),e("li",[_._v("[ ] 不要在请求体中直接提取数据, 要对数据进行加密 ("),e("code",[_._v("HS256")]),_._v(" 或 "),e("code",[_._v("RS256")]),_._v(").")]),_._v(" "),e("li",[_._v("[ ] 使 token 的过期时间尽量的短 ("),e("code",[_._v("TTL")]),_._v(", "),e("code",[_._v("RTTL")]),_._v(").")]),_._v(" "),e("li",[_._v("[ ] 不要在 JWT 的请求体中存放敏感数据, 它是"),e("a",{attrs:{href:"https://jwt.io/#debugger-io",target:"_blank",rel:"noopener noreferrer"}},[_._v("可解码的"),e("OutboundLink")],1),_._v(".")])]),_._v(" "),e("h3",{attrs:{id:"oauth-授权或认证协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oauth-授权或认证协议"}},[_._v("#")]),_._v(" OAuth 授权或认证协议")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 始终在后台验证 "),e("code",[_._v("redirect_uri")]),_._v(", 只允许白名单的 URL.")]),_._v(" "),e("li",[_._v("[ ] 始终在授权时使用有效期较短的授权码（code）而不是令牌（access_token） (不允许 "),e("code",[_._v("response_type=token")]),_._v(").")]),_._v(" "),e("li",[_._v("[ ] 使用随机哈希数的 "),e("code",[_._v("state")]),_._v(" 参数来防止跨站请求伪造(CSRF).")]),_._v(" "),e("li",[_._v("[ ] 对不同的应用分别定义默认的作用域和各自有效的作用域参数.")])]),_._v(" "),e("h2",{attrs:{id:"访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#访问"}},[_._v("#")]),_._v(" 访问")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 限制流量来防止 DDoS 攻击和暴力攻击.")]),_._v(" "),e("li",[_._v("[ ] 在服务端使用 HTTPS 协议来防止 MITM （中间人攻击）.")]),_._v(" "),e("li",[_._v("[ ] 使用 "),e("code",[_._v("HSTS")]),_._v(" 协议防止 SSL Strip 攻击.")])]),_._v(" "),e("h2",{attrs:{id:"输入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入"}},[_._v("#")]),_._v(" 输入")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 使用与操作相符的 HTTP 操作函数, "),e("code",[_._v("GET (读取)")]),_._v(", "),e("code",[_._v("POST (创建)")]),_._v(", "),e("code",[_._v("PUT (替换/更新)")]),_._v(" 以及 "),e("code",[_._v("DELETE (删除记录)")]),_._v(", 如果请求的方法不适用于请求的资源则返回 "),e("code",[_._v("405 Method Not Allowed")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 在请求头中的 "),e("code",[_._v("content-type")]),_._v(" 字段使用内容验证来只允许支持的格式 (如 "),e("code",[_._v("application/xml")]),_._v(", "),e("code",[_._v("application/json")]),_._v(" 等等) 并在不满足条件的时候返回 "),e("code",[_._v("406 Not Acceptable")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 验证 "),e("code",[_._v("content-type")]),_._v(" 中申明的编码和你收到正文编码一致 (如 "),e("code",[_._v("application/x-www-form-urlencoded")]),_._v(", "),e("code",[_._v("multipart/form-data")]),_._v(", "),e("code",[_._v("application/json")]),_._v(" 等等).")]),_._v(" "),e("li",[_._v("[ ] 验证用户输入来避免一些普通的易受攻击缺陷 (如 "),e("code",[_._v("XSS")]),_._v(", "),e("code",[_._v("SQL-注入")]),_._v(", "),e("code",[_._v("远程代码执行")]),_._v(" 等等).")]),_._v(" "),e("li",[_._v("[ ] 不要在 URL 中使用任何敏感的数据 ("),e("code",[_._v("credentials")]),_._v(", "),e("code",[_._v("Passwords")]),_._v(", "),e("code",[_._v("security tokens")]),_._v(", or "),e("code",[_._v("API keys")]),_._v("), 而是使用标准的认证请求头.")]),_._v(" "),e("li",[_._v("[ ] 使用一个 API Gateway 服务来启用缓存、限制访问速率 (如 "),e("code",[_._v("Quota")]),_._v(", "),e("code",[_._v("Spike Arrest")]),_._v(", "),e("code",[_._v("Concurrent Rate Limit")]),_._v(") 以及动态地部署 APIs resources.")])]),_._v(" "),e("h2",{attrs:{id:"处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理"}},[_._v("#")]),_._v(" 处理")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 检查是否所有的接口都包含必要都身份认证, 以避免被破坏了的认证体系.")]),_._v(" "),e("li",[_._v("[ ] 避免使用特有的资源 id. 使用 "),e("code",[_._v("/me/orders")]),_._v(" 替代 "),e("code",[_._v("/user/654321/orders")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 使用 "),e("code",[_._v("UUID")]),_._v(" 代替自增长的 id.")]),_._v(" "),e("li",[_._v("[ ] 如果需要解析 XML 文件, 确保实体解析(entity parsing)是关闭的以避免 "),e("code",[_._v("XXE")]),_._v(" 攻击.")]),_._v(" "),e("li",[_._v("[ ] 如果需要解析 XML 文件, 确保实体扩展(entity expansion)是关闭的以避免通过指数实体扩展攻击实现的 "),e("code",[_._v("Billion Laughs/XML bomb")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 在文件上传中使用 CDN.")]),_._v(" "),e("li",[_._v("[ ] 如果数据处理量很大, 尽可能使用队列或者 Workers 在后台处理来避免阻塞请求，从而快速响应客户端.")]),_._v(" "),e("li",[_._v("[ ] 不要忘了把 DEBUG 模式关掉.")])]),_._v(" "),e("h2",{attrs:{id:"输出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[_._v("#")]),_._v(" 输出")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 增加请求返回头 "),e("code",[_._v("X-Content-Type-Options: nosniff")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 增加请求返回头 "),e("code",[_._v("X-Frame-Options: deny")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 增加请求返回头 "),e("code",[_._v("Content-Security-Policy: default-src 'none'")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 删除请求返回中的指纹头 - "),e("code",[_._v("X-Powered-By")]),_._v(", "),e("code",[_._v("Server")]),_._v(", "),e("code",[_._v("X-AspNet-Version")]),_._v(" 等等.")]),_._v(" "),e("li",[_._v("[ ] 在响应中遵循请求的 "),e("code",[_._v("content-type")]),_._v(", 如果你的请求类型是 "),e("code",[_._v("application/json")]),_._v(" 那么你返回的 "),e("code",[_._v("content-type")]),_._v(" 就是 "),e("code",[_._v("application/json")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 不要返回敏感的数据, 如 "),e("code",[_._v("credentials")]),_._v(", "),e("code",[_._v("Passwords")]),_._v(", "),e("code",[_._v("security tokens")]),_._v(".")]),_._v(" "),e("li",[_._v("[ ] 给请求返回使用合理的 HTTP 响应代码. (如 "),e("code",[_._v("200 OK")]),_._v(", "),e("code",[_._v("400 Bad Request")]),_._v(", "),e("code",[_._v("401 Unauthorized")]),_._v(", "),e("code",[_._v("405 Method Not Allowed")]),_._v(" 等等).")])]),_._v(" "),e("h2",{attrs:{id:"持续集成和持续部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持续集成和持续部署"}},[_._v("#")]),_._v(" 持续集成和持续部署")]),_._v(" "),e("ul",[e("li",[_._v("[ ] 使用单元测试以及集成测试的覆盖率来保障你的设计和实现.")]),_._v(" "),e("li",[_._v("[ ] 引入代码审查流程, 禁止私自合并代码.")]),_._v(" "),e("li",[_._v("[ ] 在推送到生产环境之前确保服务的所有组件都用杀毒软件静态地扫描过, 包括第三方库和其它依赖.")]),_._v(" "),e("li",[_._v("[ ] 为部署设计一个回滚方案.")])]),_._v(" "),e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[_._v("#")]),_._v(" 参考资料")]),_._v(" "),e("ul",[e("li",[_._v("https://github.com/shieldfy/API-Security-Checklist")])])])}),[],!1,null,null,null);v.default=o.exports}}]);