(window.webpackJsonp=window.webpackJsonp||[]).push([[353],{1179:function(s,t,a){"use strict";a.r(t);var n=a(15),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[s._v("#")]),s._v(" 背景")]),s._v(" "),a("p",[s._v("如果数据库被“拖库”明文存储的密码就变得不安全。之前的做法是使用 md5 散列的方式，因为 md5 不可逆，无法从密文推出原文。")]),s._v(" "),a("p",[s._v("但是 HASH 算法最大的问题是，会发生撞库，也就是说，有可能出现多个原文得到同一个密码。")]),s._v(" "),a("p",[s._v("下面这个式子是存在的，如果原文是 M1，只需要另外一个同样 HASH 值的密码即可登录。")]),s._v(" "),a("blockquote",[a("p",[s._v("MD5(M1) = MD5(M2) = MD5(M3)")])]),s._v(" "),a("p",[s._v("一种攻击方法是，攻击者记录了一张巨大的密码库，预先计算了常用密码的 hash 值，这样只需要搜索 hash 值就能寻找到一个合适的密码用于登录。")]),s._v(" "),a("p",[s._v("这就是被彩虹表攻击。")]),s._v(" "),a("p",[s._v("解决彩虹表的问题是加盐，在加密之前，对原文混入其他信息，混入的信息不存放到数据库中。实际寻找到其他原文也无法登录。")]),s._v(" "),a("p",[s._v("第二中攻击方法是王小云教授寻找到的一种新的方法，通过算法快速的找到 M2，这样不依赖彩虹表就可以实施攻击。")]),s._v(" "),a("blockquote",[a("p",[s._v("MD5(M1) = MD5(M2)")])]),s._v(" "),a("p",[s._v("当被攻击者价值非常大，攻击者获取足够多的撞库原文，还是能分析盐值。")]),s._v(" "),a("h2",{attrs:{id:"bcrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bcrypt"}},[s._v("#")]),s._v(" Bcrypt")]),s._v(" "),a("p",[s._v("Bcrypt 有两个特点")]),s._v(" "),a("ul",[a("li",[s._v("每一次 HASH 出来的值不一样")]),s._v(" "),a("li",[s._v("计算非常缓慢")])]),s._v(" "),a("p",[s._v("因此使用 Bcrypt 进行加密后，攻击者想要使用算出 M2 成本变得不可接受。但代价是应用自身也会性能受到影响，不过登录行为并不是随时在发生，因此能够忍受。对于攻击者来说，需要不断计算，让攻击变得不太可能。")]),s._v(" "),a("p",[s._v("因此推荐使用 Bcrypt 进行密码加密。")]),s._v(" "),a("h2",{attrs:{id:"在-java-中使用-bcrypt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-java-中使用-bcrypt"}},[s._v("#")]),s._v(" 在 Java 中使用 Bcrypt")]),s._v(" "),a("p",[s._v("如果引入了 Spring Security, BCryptPasswordEncoder 提供了相关的方法。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    public String encode(CharSequence rawPassword) {\n        String salt;\n        if (this.strength > 0) {\n            if (this.random != null) {\n                salt = BCrypt.gensalt(this.strength, this.random);\n            } else {\n                salt = BCrypt.gensalt(this.strength);\n            }\n        } else {\n            salt = BCrypt.gensalt();\n        }\n\n        return BCrypt.hashpw(rawPassword.toString(), salt);\n    }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("BCryptPasswordEncoder 调用了另外一个类 BCrypt 完成加密操作，实际工作工作中可以直接使用 BCryptPasswordEncoder 类即可。")]),s._v(" "),a("h2",{attrs:{id:"相关资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关资源"}},[s._v("#")]),s._v(" 相关资源")]),s._v(" "),a("ul",[a("li",[s._v("https://blog.csdn.net/nnsword/article/details/78191292")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/qianjinyan/p/10636404.html")])])])}),[],!1,null,null,null);t.default=r.exports}}]);