(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{1218:function(t,s,e){"use strict";e.r(s);var n=e(15),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),n("p",[t._v("Spring Security 主要解决用户的认证和授权问题，以及一些技术防护设施，例如 XSS、CSRF问题。")]),t._v(" "),n("p",[t._v("Spring Security 不仅仅解决权限和认证问题，还解决一些安全过滤，以及增加 HTTP 头部等能力。")]),t._v(" "),n("p",[t._v("基本概念")]),t._v(" "),n("p",[t._v("– SecurityContextHolder 存放认证上上下文信息 SecurityContext\n– SecurityContext 存放 Authentication 以及一些请求信息，用于全局跨上下文访问\n– Authentication  存放用户认证后的信息，用户名和权限列表\n– UserDetails 用户信息，例如用户名、密码、是否过期\n– UserDetailsService AuthenticationProvider 进行验证时，调用该服务获取用户信息\n– UsernamePasswordAuthenticationToken 存放用户名和密码，用于后面的验证\n– AuthenticationManager 支持多种验证方式进行验证，只要有一个验证通过即可，默认会加载 DaoAuthenticationProvider 进行验证\n– AuthenticationEntryPoint 处理验证过程中的异常信息")]),t._v(" "),n("h3",{attrs:{id:"主要验证流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主要验证流程"}},[t._v("#")]),t._v(" 主要验证流程")]),t._v(" "),n("p",[n("img",{attrs:{src:e(750),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"认证原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#认证原理"}},[t._v("#")]),t._v(" 认证原理")]),t._v(" "),n("ul",[n("li",[t._v("用户认证阶段\n"),n("ul",[n("li",[t._v("用户名密码认证过滤器")]),t._v(" "),n("li",[t._v("初始化 AuthenticationManager")]),t._v(" "),n("li",[t._v("循环验证  AuthenticationProvider\n"),n("ul",[n("li",[t._v("AnonymousAuthenticationProvider")]),t._v(" "),n("li",[t._v("DaoProvider")]),t._v(" "),n("li",[t._v("RememberMeAuthenticationProvider")])])])])]),t._v(" "),n("li",[t._v("凭证验证阶段\n"),n("ul",[n("li",[t._v("获取 session 管理器")]),t._v(" "),n("li",[t._v("AccessDecisionManager 决定是否放行")])])])]),t._v(" "),n("h4",{attrs:{id:"表单认证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#表单认证"}},[t._v("#")]),t._v(" 表单认证")]),t._v(" "),n("ul",[n("li",[t._v("spring security 会注册 filter 然后提供 login page")]),t._v(" "),n("li",[t._v("用户提交后命中 userpassword 过滤器")]),t._v(" "),n("li",[t._v("AuthenticationProvider 检查注册的 Provider")])]),t._v(" "),n("h4",{attrs:{id:"token-无状态认证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#token-无状态认证"}},[t._v("#")]),t._v(" Token 无状态认证")]),t._v(" "),n("ul",[n("li",[t._v("设置 session 认证方式为无状态")]),t._v(" "),n("li",[t._v("每一次请求都拿从 redis、jwt 中取出的用户信息重新 auth 一次")]),t._v(" "),n("li",[t._v("无状态认证会带来一些性能的开销")])]),t._v(" "),n("h2",{attrs:{id:"security-注册的-filter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#security-注册的-filter"}},[t._v("#")]),t._v(" security 注册的 filter")]),t._v(" "),n("p",[t._v("在 FilterComparator 中可以找到")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\tFilterComparator() {\n\t\tStep order = new Step(INITIAL_ORDER, ORDER_STEP);\n\t\tput(ChannelProcessingFilter.class, order.next());\n\t\tput(ConcurrentSessionFilter.class, order.next());\n\t\tput(WebAsyncManagerIntegrationFilter.class, order.next());\n\t\tput(SecurityContextPersistenceFilter.class, order.next());\n\t\tput(HeaderWriterFilter.class, order.next());\n\t\tput(CorsFilter.class, order.next());\n\t\tput(CsrfFilter.class, order.next());\n\t\tput(LogoutFilter.class, order.next());\n\t\tfilterToOrder.put(\n\t\t\t"org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter",\n\t\t\t\torder.next());\n\t\tput(X509AuthenticationFilter.class, order.next());\n\t\tput(AbstractPreAuthenticatedProcessingFilter.class, order.next());\n\t\tfilterToOrder.put("org.springframework.security.cas.web.CasAuthenticationFilter",\n\t\t\t\torder.next());\n\t\tfilterToOrder.put(\n\t\t\t"org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter",\n\t\t\t\torder.next());\n\t\tput(UsernamePasswordAuthenticationFilter.class, order.next());\n\t\tput(ConcurrentSessionFilter.class, order.next());\n\t\tfilterToOrder.put(\n\t\t\t\t"org.springframework.security.openid.OpenIDAuthenticationFilter", order.next());\n\t\tput(DefaultLoginPageGeneratingFilter.class, order.next());\n\t\tput(DefaultLogoutPageGeneratingFilter.class, order.next());\n\t\tput(ConcurrentSessionFilter.class, order.next());\n\t\tput(DigestAuthenticationFilter.class, order.next());\n\t\tfilterToOrder.put(\n\t\t\t\t"org.springframework.security.oauth2.server.resource.web.BearerTokenAuthenticationFilter", order.next());\n\t\tput(BasicAuthenticationFilter.class, order.next());\n\t\tput(RequestCacheAwareFilter.class, order.next());\n\t\tput(SecurityContextHolderAwareRequestFilter.class, order.next());\n\t\tput(JaasApiIntegrationFilter.class, order.next());\n\t\tput(RememberMeAuthenticationFilter.class, order.next());\n\t\tput(AnonymousAuthenticationFilter.class, order.next());\n\t\tfilterToOrder.put(\n\t\t\t"org.springframework.security.oauth2.client.web.OAuth2AuthorizationCodeGrantFilter",\n\t\t\t\torder.next());\n\t\tput(SessionManagementFilter.class, order.next());\n\t\tput(ExceptionTranslationFilter.class, order.next());\n\t\tput(FilterSecurityInterceptor.class, order.next());\n\t\tput(SwitchUserFilter.class, order.next());\n\t}\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br")])]),n("h2",{attrs:{id:"httpsecurity-配置规则说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#httpsecurity-配置规则说明"}},[t._v("#")]),t._v(" HttpSecurity 配置规则说明")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('protected void configure(HttpSecurity http) throws Exception {\n\thttp\n\t\t.authorizeRequests()                                                                \n\t\t\t.antMatchers("/resources/**", "/signup", "/about").permitAll()                  \n\t\t\t.antMatchers("/admin/**").hasRole("ADMIN")                                      \n\t\t\t.antMatchers("/db/**").access("hasRole(\'ADMIN\') and hasRole(\'DBA\')")            \n\t\t\t.anyRequest().authenticated()                                                   \n\t\t\t.and()\n\t\t// ...\n\t\t.formLogin();\n}\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("ul",[n("li",[t._v("http.authorizeRequests()方法有多个子节点，每个macher按照他们的声明顺序执行。")]),t._v(" "),n("li",[t._v('我们指定任何用户都可以通过访问的多个URL模式。任何用户都可以访问URL以"/resources/", equals "/signup", 或者 "/about"开头的URL。')]),t._v(" "),n("li",[t._v('以 "/admin/" 开头的URL只能由拥有 "ROLE_ADMIN"角色的用户访问。请注意我们使用 hasRole 方法，没有使用 "ROLE_" 前缀.')]),t._v(" "),n("li",[t._v('任何以"/db/" 开头的URL需要用户同时具有 "ROLE_ADMIN" 和 "ROLE_DBA"。和上面一样我们的 hasRole 方法也没有使用 "ROLE_" 前缀.')]),t._v(" "),n("li",[t._v("尚未匹配的任何URL要求用户进行身份验证")])]),t._v(" "),n("h2",{attrs:{id:"jdbc-验证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jdbc-验证"}},[t._v("#")]),t._v(" JDBC 验证")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@Autowired\nprivate DataSource dataSource;\n\n@Autowired\npublic void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n\tauth\n\t\t.jdbcAuthentication()\n\t\t\t.dataSource(dataSource)\n\t\t\t.withDefaultSchema()\n\t\t\t.withUser("user").password("password").roles("USER").and()\n\t\t\t.withUser("admin").password("password").roles("USER", "ADMIN");\n}\n\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])]),n("p",[t._v("如果需要提供自己的验证器实现 AuthenticationProvider")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@Bean\npublic SpringAuthenticationProvider springAuthenticationProvider() {\n\treturn new SpringAuthenticationProvider();\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h2",{attrs:{id:"userdetailsservice"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#userdetailsservice"}},[t._v("#")]),t._v(" UserDetailsService")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@Bean\npublic SpringDataUserDetailsService springDataUserDetailsService() {\n\treturn new SpringDataUserDetailsService();\n}\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("h2",{attrs:{id:"定义密码加密方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义密码加密方式"}},[t._v("#")]),t._v(" 定义密码加密方式")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@Bean\npublic BCryptPasswordEncoder passwordEncoder() {\n\treturn new BCryptPasswordEncoder();\n}\n\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h2",{attrs:{id:"给方法添加权限检查-enableglobalmethodsecurity"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#给方法添加权限检查-enableglobalmethodsecurity"}},[t._v("#")]),t._v(" 给方法添加权限检查 EnableGlobalMethodSecurity")]),t._v(" "),n("p",[t._v("我们可以在任何使用@Configuration的实例上，使用@EnableGlobalMethodSecurity注解来启用基于注解的安全性。例如下面会启用Spring的@Secured注解。")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('@EnableGlobalMethodSecurity(securedEnabled = true)\npublic class MethodSecurityConfig {\n// ...\n}\n\n例如，通过  PreAuthorize 可以控制用户的访问\n @PreAuthorize("hasRole(\'admin\')")\n @RequestMapping(value = "/user/", method = RequestMethod.GET)\n @ResponseBody\n public List<User> listAllUsers() {\n   List<User> users = userService.findAll();\n   if(users.isEmpty()){\n   \treturn null;\n \t\t}\n \t\treturn users;\n }\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("h2",{attrs:{id:"使用-token-方式鉴权"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-token-方式鉴权"}},[t._v("#")]),t._v(" 使用 token 方式鉴权")]),t._v(" "),n("p",[n("img",{attrs:{src:e(751),alt:""}})]),t._v(" "),n("p",[t._v("参考资料 https://grokonez.com/spring-framework/spring-security/spring-boot-spring-security-jwt-authentication-architecture-tutorial")]),t._v(" "),n("h2",{attrs:{id:"相关资料"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相关资料"}},[t._v("#")]),t._v(" 相关资料")]),t._v(" "),n("ul",[n("li",[t._v("关于Spring Security中无Session和无状态stateless https://www.cnblogs.com/Mainz/p/3230077.html")]),t._v(" "),n("li",[t._v("SpringSecurity原理剖析与权限系统设计 https://www.cnblogs.com/fanzhidongyzby/archive/2019/09/29/11610334.html")]),t._v(" "),n("li",[t._v("Spring Security用户认证流程源码详解 https://blog.csdn.net/qq_37142346/article/details/80032336")]),t._v(" "),n("li",[t._v("中文文档 https://www.springcloud.cc/spring-security-zhcn.html#getting-starteda")]),t._v(" "),n("li",[t._v("Config Spring Security for Restful API https://www.baeldung.com/securing-a-restful-web-service-with-spring-security")]),t._v(" "),n("li",[t._v("https://spring.io/guides/gs/securing-web/")])])])}),[],!1,null,null,null);s.default=r.exports},750:function(t,s,e){t.exports=e.p+"assets/img/spring-security-flow.88984d03.png"},751:function(t,s,e){t.exports=e.p+"assets/img/spring-security-jwt-authentication-architecture-diagram.c1fc15c5.png"}}]);