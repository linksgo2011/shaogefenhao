(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{1040:function(v,t,_){"use strict";_.r(t);var a=_(15),s=Object(a.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"java-背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-背景"}},[v._v("#")]),v._v(" Java 背景")]),v._v(" "),a("p",[v._v("Java是由Sun Microsystems最初开发并于1995年发布的高级编程语言。Java在各种平台上运行，例如Windows，Mac OS和各种UNIX版本。")]),v._v(" "),a("h2",{attrs:{id:"保留字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#保留字"}},[v._v("#")]),v._v(" 保留字")]),v._v(" "),a("table",[a("thead",[a("tr",[a("th"),v._v(" "),a("th"),v._v(" "),a("th"),v._v(" "),a("th")])]),v._v(" "),a("tbody",[a("tr",[a("td",[v._v("abstract")]),v._v(" "),a("td",[v._v("assert")]),v._v(" "),a("td",[v._v("boolean")]),v._v(" "),a("td",[v._v("break")])]),v._v(" "),a("tr",[a("td",[v._v("byte")]),v._v(" "),a("td",[v._v("case")]),v._v(" "),a("td",[v._v("catch")]),v._v(" "),a("td",[v._v("char")])]),v._v(" "),a("tr",[a("td",[v._v("class")]),v._v(" "),a("td",[v._v("const")]),v._v(" "),a("td",[v._v("continue")]),v._v(" "),a("td",[v._v("default")])]),v._v(" "),a("tr",[a("td",[v._v("do")]),v._v(" "),a("td",[v._v("double")]),v._v(" "),a("td",[v._v("else")]),v._v(" "),a("td",[v._v("enum")])]),v._v(" "),a("tr",[a("td",[v._v("extends")]),v._v(" "),a("td",[v._v("final")]),v._v(" "),a("td",[v._v("finally")]),v._v(" "),a("td",[v._v("float")])]),v._v(" "),a("tr",[a("td",[v._v("for")]),v._v(" "),a("td",[v._v("goto")]),v._v(" "),a("td",[v._v("if")]),v._v(" "),a("td",[v._v("implements")])]),v._v(" "),a("tr",[a("td",[v._v("import")]),v._v(" "),a("td",[v._v("instanceof")]),v._v(" "),a("td",[v._v("int")]),v._v(" "),a("td",[v._v("interface")])]),v._v(" "),a("tr",[a("td",[v._v("long")]),v._v(" "),a("td",[v._v("native")]),v._v(" "),a("td",[v._v("new")]),v._v(" "),a("td",[v._v("package")])]),v._v(" "),a("tr",[a("td",[v._v("private")]),v._v(" "),a("td",[v._v("protected")]),v._v(" "),a("td",[v._v("public")]),v._v(" "),a("td",[v._v("return")])]),v._v(" "),a("tr",[a("td",[v._v("short")]),v._v(" "),a("td",[v._v("static")]),v._v(" "),a("td",[v._v("strictfp")]),v._v(" "),a("td",[v._v("super")])]),v._v(" "),a("tr",[a("td",[v._v("switch")]),v._v(" "),a("td",[v._v("synchronized")]),v._v(" "),a("td",[v._v("this")]),v._v(" "),a("td",[v._v("throw")])]),v._v(" "),a("tr",[a("td",[v._v("throws")]),v._v(" "),a("td",[v._v("transient")]),v._v(" "),a("td",[v._v("try")]),v._v(" "),a("td",[v._v("void")])]),v._v(" "),a("tr",[a("td",[v._v("volatile")]),v._v(" "),a("td",[v._v("while")]),v._v(" "),a("td"),v._v(" "),a("td")])])]),v._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[v._v("#")]),v._v(" 数据类型")]),v._v(" "),a("p",[v._v("Java有两种可用的数据类型")]),v._v(" "),a("ul",[a("li",[v._v("原始数据类型共8种")]),v._v(" "),a("li",[v._v("引用/对象数据类型")])]),v._v(" "),a("h3",{attrs:{id:"原始数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原始数据类型"}},[v._v("#")]),v._v(" 原始数据类型")]),v._v(" "),a("p",[v._v("Byte")]),v._v(" "),a("ul",[a("li",[v._v("字节数据类型是8位带符号的二进制补码整数")]),v._v(" "),a("li",[v._v("最小值是-128（-2 ^ 7）")]),v._v(" "),a("li",[v._v("最大值为127（含）（2 ^ 7 -1）")]),v._v(" "),a("li",[v._v("默认值为0")]),v._v(" "),a("li",[v._v("字节数据类型用于节省大型数组中的空间，主要用于代替整数，因为字节比整数小四倍。")]),v._v(" "),a("li",[v._v("示例：字节a = 100，字节b = -50")])]),v._v(" "),a("p",[v._v("Short")]),v._v(" "),a("ul",[a("li",[v._v("短数据类型是一个16位带符号的二进制补码整数")]),v._v(" "),a("li",[v._v("最小值是-32,768（-2 ^ 15）")]),v._v(" "),a("li",[v._v("最大值为32,767（含）（2 ^ 15 -1）")]),v._v(" "),a("li",[v._v("短数据类型也可以用于将内存保存为字节数据类型。短路比整数小2倍")]),v._v(" "),a("li",[v._v("预设值为0。")]),v._v(" "),a("li",[v._v("例如：short s = 10000，short r = -20000")])]),v._v(" "),a("p",[v._v("Int")]),v._v(" "),a("ul",[a("li",[v._v("Int数据类型是32位带符号的二进制补码整数。")]),v._v(" "),a("li",[v._v("最小值是-2,147,483,648（-2 ^ 31）")]),v._v(" "),a("li",[v._v("最大值为2,147,483,647（含）（2 ^ 31 -1）")]),v._v(" "),a("li",[v._v("除非担心内存，否则通常将整数用作整数值的默认数据类型。")]),v._v(" "),a("li",[v._v("默认值为0")]),v._v(" "),a("li",[v._v("例如：int a = 100000，int b = -200000")])]),v._v(" "),a("p",[v._v("Long")]),v._v(" "),a("ul",[a("li",[v._v("长数据类型是64位带符号的二进制补码整数")]),v._v(" "),a("li",[v._v("最小值是-9,223,372,036,854,775,808（-2 ^ 63）")]),v._v(" "),a("li",[v._v("最大值为9,223,372,036,854,775,807（含）（2 ^ 63 -1）")]),v._v(" "),a("li",[v._v("当需要比int更大的范围时使用此类型")]),v._v(" "),a("li",[v._v("默认值为0L")]),v._v(" "),a("li",[v._v("示例：长a = 100000L，长b = -200000L")])]),v._v(" "),a("p",[v._v("Float")]),v._v(" "),a("ul",[a("li",[v._v("浮点数据类型是单精度32位IEEE 754浮点")]),v._v(" "),a("li",[v._v("浮点数主要用于以大数组浮点数保存内存")]),v._v(" "),a("li",[v._v("默认值为0.0f")]),v._v(" "),a("li",[v._v("浮动数据类型从不用于诸如货币之类的精确值")]),v._v(" "),a("li",[v._v("示例：float f1 = 234.5f")])]),v._v(" "),a("p",[v._v("Double")]),v._v(" "),a("ul",[a("li",[v._v("double数据类型是双精度64位IEEE 754浮点")]),v._v(" "),a("li",[v._v("此数据类型通常用作十进制值的默认数据类型，通常是默认选择")]),v._v(" "),a("li",[v._v("绝对不能将双精度数据类型用于货币等精确值")]),v._v(" "),a("li",[v._v("默认值为0.0d")]),v._v(" "),a("li",[v._v("例如：double d1 = 123.4")])]),v._v(" "),a("p",[v._v("Bool")]),v._v(" "),a("ul",[a("li",[v._v("布尔数据类型表示一位信息")]),v._v(" "),a("li",[v._v("只有两个可能的值：true和false")]),v._v(" "),a("li",[v._v("此数据类型用于跟踪真/假条件的简单标志")]),v._v(" "),a("li",[v._v("默认值为假")]),v._v(" "),a("li",[v._v("示例：bool isTrue = true")])]),v._v(" "),a("p",[v._v("Char")]),v._v(" "),a("ul",[a("li",[v._v("char数据类型是单个16位Unicode字符")]),v._v(" "),a("li",[v._v("最小值为“ \\ u0000”（或0）")]),v._v(" "),a("li",[v._v("最大值为“ \\ uffff”（或65,535（含））")]),v._v(" "),a("li",[v._v("Char数据类型用于存储任何字符")]),v._v(" "),a("li",[v._v("示例：char letterA ='A'")])]),v._v(" "),a("h3",{attrs:{id:"引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[v._v("#")]),v._v(" 引用数据类型")]),v._v(" "),a("ul",[a("li",[v._v("引用变量是使用类的已定义构造函数创建的。它们用于访问对象。这些变量被声明为无法更改的特定类型。")]),v._v(" "),a("li",[v._v("类对象和各种类型的数组变量都属于引用数据类型。")]),v._v(" "),a("li",[v._v("任何引用变量的默认值为null。")]),v._v(" "),a("li",[v._v("引用变量可用于引用声明类型或任何兼容类型的任何对象。")])]),v._v(" "),a("h3",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[v._v("#")]),v._v(" 数组")]),v._v(" "),a("p",[v._v("定义一个数组")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("dataType[] arrayRefVar;   // 推荐的方式\nor\ndataType arrayRefVar[];  // 工作，但不推荐\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br")])]),a("p",[v._v("创建数组")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("arrayRefVar = new dataType[arraySize];\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("使用已知数据创建数组")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("dataType[] arrayRefVar = {value0, value1, ..., valuek};\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("处理数组的一个例子")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v('public class TestArray {\n\n   public static void main(String[] args) {\n      double[] myList = {1.9, 2.9, 3.4, 3.5};\n\n      // Print all the array elements\n      for (int i = 0; i < myList.length; i++) {\n         System.out.println(myList[i] + " ");\n      }\n     \n      // Summing all elements\n      double total = 0;\n      for (int i = 0; i < myList.length; i++) {\n         total += myList[i];\n      }\n      System.out.println("Total is " + total);\n      \n      // Finding the largest element\n      double max = myList[0];\n      for (int i = 1; i < myList.length; i++) {\n         if (myList[i] > max) max = myList[i];\n      }\n      System.out.println("Max is " + max);  \n   }\n}\n')])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br"),a("span",{staticClass:"line-number"},[v._v("6")]),a("br"),a("span",{staticClass:"line-number"},[v._v("7")]),a("br"),a("span",{staticClass:"line-number"},[v._v("8")]),a("br"),a("span",{staticClass:"line-number"},[v._v("9")]),a("br"),a("span",{staticClass:"line-number"},[v._v("10")]),a("br"),a("span",{staticClass:"line-number"},[v._v("11")]),a("br"),a("span",{staticClass:"line-number"},[v._v("12")]),a("br"),a("span",{staticClass:"line-number"},[v._v("13")]),a("br"),a("span",{staticClass:"line-number"},[v._v("14")]),a("br"),a("span",{staticClass:"line-number"},[v._v("15")]),a("br"),a("span",{staticClass:"line-number"},[v._v("16")]),a("br"),a("span",{staticClass:"line-number"},[v._v("17")]),a("br"),a("span",{staticClass:"line-number"},[v._v("18")]),a("br"),a("span",{staticClass:"line-number"},[v._v("19")]),a("br"),a("span",{staticClass:"line-number"},[v._v("20")]),a("br"),a("span",{staticClass:"line-number"},[v._v("21")]),a("br"),a("span",{staticClass:"line-number"},[v._v("22")]),a("br"),a("span",{staticClass:"line-number"},[v._v("23")]),a("br"),a("span",{staticClass:"line-number"},[v._v("24")]),a("br"),a("span",{staticClass:"line-number"},[v._v("25")]),a("br")])]),a("p",[v._v("数组的内存空间分为两部分，一块用于存储引用，一块存储真实的数据。")]),v._v(" "),a("p",[a("img",{attrs:{src:_(628),alt:"数组地址空间"}}),v._v(";")]),v._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[v._v("#")]),v._v(" 运算符")]),v._v(" "),a("table",[a("thead",[a("tr",[a("th",[v._v("操作符")]),v._v(" "),a("th",[v._v("描述")]),v._v(" "),a("th",[v._v("范例")])])]),v._v(" "),a("tbody",[a("tr",[a("td",[v._v("+（加法）")]),v._v(" "),a("td",[v._v("在运算符的任一侧添加值。")]),v._v(" "),a("td",[v._v("A + B会得到30")])]),v._v(" "),a("tr",[a("td",[v._v("-（减法）")]),v._v(" "),a("td",[v._v("从左操作数中减去右操作数。")]),v._v(" "),a("td",[v._v("A-B会得到-10")])]),v._v(" "),a("tr",[a("td",[v._v("*（乘法）")]),v._v(" "),a("td",[v._v("将运算符两边的值相乘。")]),v._v(" "),a("td",[v._v("A * B会得到200")])]),v._v(" "),a("tr",[a("td",[v._v("/（部门）")]),v._v(" "),a("td",[v._v("用左手操作数除以右手操作数。")]),v._v(" "),a("td",[v._v("B / A会得到2")])]),v._v(" "),a("tr",[a("td",[v._v("％（模量）")]),v._v(" "),a("td",[v._v("将左操作数除以右操作数，然后返回余数。")]),v._v(" "),a("td",[v._v("B％A得到0")])]),v._v(" "),a("tr",[a("td",[v._v("++（增量）")]),v._v(" "),a("td",[v._v("将操作数的值增加1。")]),v._v(" "),a("td",[v._v("B++得到21")])]),v._v(" "),a("tr",[a("td",[v._v("-（减量）")]),v._v(" "),a("td",[v._v("将操作数的值减1。")]),v._v(" "),a("td",[v._v("B--得到19")])])])]),v._v(" "),a("p",[v._v("运算注意长度")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("int a = 2147483647*2 // 得到 -2 因为超长了\nlong a = 2147483647*2 // 也不行，因为还是 int \n\nlong a = 2147483647*2L // 工作了，转换成long 了\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br")])]),a("p",[v._v("整数除法不是四舍五入，而是直接舍去小数")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("double d = 10/4 // 结果是2\ndouble d = 10/4.0 // 正确\ndouble d = 10/(double)4 // 正确\n\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br")])]),a("p",[v._v("小数比较无意义")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("boole same = 2.0 == 1.0+1.0 //false 计算机浮点问题\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("小数计算结果不精确")]),v._v(" "),a("p",[v._v("float f = 0.1F * 0.1F // 结果是 0.00000001")]),v._v(" "),a("p",[v._v("自增（++）理解很简单")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("b = a++-1\n\n本质是\n\nb = (a++)-1\n\n等效于\n\na = a + 1\nb = a -1\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br"),a("span",{staticClass:"line-number"},[v._v("3")]),a("br"),a("span",{staticClass:"line-number"},[v._v("4")]),a("br"),a("span",{staticClass:"line-number"},[v._v("5")]),a("br"),a("span",{staticClass:"line-number"},[v._v("6")]),a("br"),a("span",{staticClass:"line-number"},[v._v("7")]),a("br"),a("span",{staticClass:"line-number"},[v._v("8")]),a("br"),a("span",{staticClass:"line-number"},[v._v("9")]),a("br"),a("span",{staticClass:"line-number"},[v._v("10")]),a("br")])]),a("p",[v._v("原理是 --/++ 的运算优先级很高。a++ 是先做其他操作，在自增;a++ 是先自增再做其他操作。")]),v._v(" "),a("p",[v._v("对象的比较是比较的引用，而非值本身")]),v._v(" "),a("h2",{attrs:{id:"转义表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转义表"}},[v._v("#")]),v._v(" 转义表")]),v._v(" "),a("table",[a("thead",[a("tr",[a("th",[v._v("符号")]),v._v(" "),a("th",[v._v("含义")])])]),v._v(" "),a("tbody",[a("tr",[a("td",[v._v("\\n")]),v._v(" "),a("td",[v._v("换行（0x0a）")])]),v._v(" "),a("tr",[a("td",[v._v("\\r")]),v._v(" "),a("td",[v._v("回车（0x0d）")])]),v._v(" "),a("tr",[a("td",[v._v("\\F")]),v._v(" "),a("td",[v._v("换页（0x0c）")])]),v._v(" "),a("tr",[a("td",[v._v("\\b")]),v._v(" "),a("td",[v._v("退格键（0x08）")])]),v._v(" "),a("tr",[a("td",[v._v("\\s")]),v._v(" "),a("td",[v._v("空格（0x20）")])]),v._v(" "),a("tr",[a("td",[v._v("\\t")]),v._v(" "),a("td",[v._v("制表符")])]),v._v(" "),a("tr",[a("td",[v._v("\\“")]),v._v(" "),a("td",[v._v("双引号")])]),v._v(" "),a("tr",[a("td",[v._v("'")]),v._v(" "),a("td",[v._v("单引号")])]),v._v(" "),a("tr",[a("td",[v._v("\\")]),v._v(" "),a("td",[v._v("反斜杠")])]),v._v(" "),a("tr",[a("td",[v._v("\\DDD")]),v._v(" "),a("td",[v._v("八进制字符（ddd）")])]),v._v(" "),a("tr",[a("td",[v._v("\\uxxxx")]),v._v(" "),a("td",[v._v("十六进制UNICODE字符（xxxx）")])])])]),v._v(" "),a("h2",{attrs:{id:"java-各个版本更新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-各个版本更新特性"}},[v._v("#")]),v._v(" Java 各个版本更新特性")]),v._v(" "),a("ul",[a("li",[v._v("JDK5 foreach 迭代方式、可变参数、枚举、自动拆装箱、泛型、注解")]),v._v(" "),a("li",[v._v("JDK6 SystemTray 类、 COmpiler API、Command Annotations")]),v._v(" "),a("li",[v._v("JDK7 switch 支持字符串匹配条件、泛型类型自动推断、try-with-resources 资源关闭、Objects 类、ForkJoinPool 等")]),v._v(" "),a("li",[v._v("JDK8 接口的默认方法实现和静态方法、Lambda 表达式、函数式接口、方法和构造函数引用、新的日期和时间API、流处理")]),v._v(" "),a("li",[v._v("JDK9 模块化、简化进程API、JSON API、钱和货币的API")]),v._v(" "),a("li",[v._v("JDK10 局部变量的类型推断、改进 GC和内存管理、线程本地握手、备用内存设备上的堆分配")])]),v._v(" "),a("h2",{attrs:{id:"this-与-super"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this-与-super"}},[v._v("#")]),v._v(" this 与 super")]),v._v(" "),a("p",[v._v("共同点")]),v._v(" "),a("ul",[a("li",[v._v("都是关键字，起指代作用")]),v._v(" "),a("li",[v._v("在构造方法中必须出现在第一行")])]),v._v(" "),a("p",[v._v("this")]),v._v(" "),a("ul",[a("li",[v._v("访问本类示例属性和方法")]),v._v(" "),a("li",[v._v("先找本类没有再找父类")]),v._v(" "),a("li",[v._v("单独使用表示当前对象")])]),v._v(" "),a("p",[v._v("super")]),v._v(" "),a("ul",[a("li",[v._v("用于子类直接访问父类的实例属性和方法")]),v._v(" "),a("li",[v._v("直接找到父类")]),v._v(" "),a("li",[v._v("在子类复写父类方法时，访问父类同名方法")])]),v._v(" "),a("h2",{attrs:{id:"java-中参数传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-中参数传递"}},[v._v("#")]),v._v(" Java 中参数传递")]),v._v(" "),a("ul",[a("li",[v._v("无论是对于基本数据类型，还是引用类型，java 中的参数传递都是值复制的传递过程。对于引用变量，复制指向对象的首地址。")])]),v._v(" "),a("h2",{attrs:{id:"什么时候防御编程做参数验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候防御编程做参数验证"}},[v._v("#")]),v._v(" 什么时候防御编程做参数验证")]),v._v(" "),a("p",[v._v("一般在最外层做数据校验，使用 bean validation 做数据的基本校验，然后在内部使用业务的校验。")]),v._v(" "),a("h2",{attrs:{id:"常见-pojo-缩写的含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见-pojo-缩写的含义"}},[v._v("#")]),v._v(" 常见 POJO 缩写的含义")]),v._v(" "),a("ul",[a("li",[v._v("POJO Plain Ordinary Java Object")]),v._v(" "),a("li",[v._v("DO Data Object")]),v._v(" "),a("li",[v._v("BO Business Object")]),v._v(" "),a("li",[v._v("DTO Data Transfer Object")]),v._v(" "),a("li",[v._v("VO View Object")]),v._v(" "),a("li",[v._v("AO Application Object")])]),v._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[v._v("#")]),v._v(" 参考资料")]),v._v(" "),a("ul",[a("li",[v._v("https://www.tutorialspoint.com/java/index.htm")])])])}),[],!1,null,null,null);t.default=s.exports},628:function(v,t,_){v.exports=_.p+"assets/img/java_array.aab3f072.jpg"}}]);