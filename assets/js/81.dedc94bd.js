(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{1194:function(_,v,e){"use strict";e.r(v);var t=e(15),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[_._v("#")]),_._v(" 背景")]),_._v(" "),t("p",[_._v("最近有一个需求，用户需要管理部门下所有的成员。根据显示的成员列表显示拖拽排序，成员的数量比较多，需要分页显示，高达数千条。")]),_._v(" "),t("p",[t("img",{attrs:{src:e(742),alt:"img"}})]),_._v(" "),t("h2",{attrs:{id:"全量更新重拍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全量更新重拍"}},[_._v("#")]),_._v(" 全量更新重拍")]),_._v(" "),t("p",[_._v("当用户量较少时，前端全量更新给后端顺序，例如 post 接口，将 ID 的数组发送到后端。")]),_._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("[2,3,4,2] \n")])]),_._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[_._v("1")]),t("br")])]),t("p",[_._v("适合首页轮播图管理、任务卡片管理。")]),_._v(" "),t("h2",{attrs:{id:"中值法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中值法"}},[_._v("#")]),_._v(" 中值法")]),_._v(" "),t("p",[_._v("原理与实现步骤：")]),_._v(" "),t("ol",[t("li",[_._v("每条记录有一个记录顺序的字段，例如 "),t("code",[_._v("index")]),_._v(" ，添加记录时按照一定的步长添加。例如 1000 2000 ，这个间隔就是用来实现排序，并最小程度不更新数据库。")]),_._v(" "),t("li",[_._v("当拖拽改变元素位置时，更新 "),t("code",[_._v("index")]),_._v("。更新规则如下：\n"),t("ol",[t("li",[_._v("调整一个元素到两个元素中间时，"),t("code",[_._v("(pre_item.index + after_item.index）/ 2 =")]),_._v("index")]),_._v(" "),t("li",[_._v("调整一个元素到第一个元素时， "),t("code",[_._v("old_first_item.index / 2 = index")])]),_._v(" "),t("li",[_._v("调整一个元素到最后一个元素时， "),t("code",[_._v("old_last_item.index + 65536 = index")])])])]),_._v(" "),t("li",[_._v("当前后两个元素的数值，不满足整数时，更新所有元素的排序。也就是排序空间不够，触发重排。")])]),_._v(" "),t("p",[_._v("注意事项：")]),_._v(" "),t("ul",[t("li",[_._v("合理设置步长，理想情况，不触发重排最大排序次数是，步长对于2的对数。")]),_._v(" "),t("li",[_._v("触发重排需要设置分布式锁")])]),_._v(" "),t("h2",{attrs:{id:"平移法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#平移法"}},[_._v("#")]),_._v(" 平移法")]),_._v(" "),t("p",[_._v("每个元素，都有一个字段"),t("code",[_._v("index")]),_._v("，表示元素的排序信息。\n规定元素从0开始递增。")]),_._v(" "),t("p",[_._v("基本操作如下：")]),_._v(" "),t("ul",[t("li",[_._v("增加数据。 新增元素时，序号为当前元素数据总量值。")]),_._v(" "),t("li",[_._v("删除元素。删除元素时，将大于该元素的序号，都减1，后续元素前移。")]),_._v(" "),t("li",[_._v("修改元素排序。当元素从 x 移动到 y 时，\n"),t("ul",[t("li",[_._v("若 x < y 时，则将(x, y)范围内的元素都减1，前移")]),_._v(" "),t("li",[_._v("若 x > y 时，则将(y, x)范围内的元素都加1，后移")])])]),_._v(" "),t("li",[_._v("查询元素。展示列表时，按照 "),t("code",[_._v("index")]),_._v(" 字段进行排序即可。若需要查第n位元素时，元素位置为 "),t("code",[_._v("index = n - 1")]),_._v("。")])]),_._v(" "),t("p",[_._v("这种方式优点是，查询快，修改慢。而且，修改接口的逻辑较重，处理起来比较麻烦。适合频繁操作，但是对接口性能要求不高的场景。")]),_._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[_._v("#")]),_._v(" 参考资料")]),_._v(" "),t("ul",[t("li",[_._v("https://www.jianshu.com/p/9ee708e43ebf")])])])}),[],!1,null,null,null);v.default=a.exports},742:function(_,v,e){_.exports=e.p+"assets/img/20190604153235130.9f0ff6d2.gif"}}]);